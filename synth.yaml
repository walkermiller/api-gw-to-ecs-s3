Resources:
  s3ecsapigwtest8630BD1E:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - Ref: AWS::AccountId
            - -s3-ecs-apigw-test
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/s3-ecs-apigw-test/Resource
  MyVpcF9F0CA6F:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/Resource
  MyVpcPublicSubnet1SubnetF6608456:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet1/Subnet
  MyVpcPublicSubnet1RouteTableC46AB2F4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet1/RouteTable
  MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet1/RouteTableAssociation
  MyVpcPublicSubnet1DefaultRoute95FDF9EB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet1/DefaultRoute
  MyVpcPublicSubnet1EIP096967CB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet1/EIP
  MyVpcPublicSubnet1NATGatewayAD3400C1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet1EIP096967CB
          - AllocationId
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet1/NATGateway
  MyVpcPublicSubnet2Subnet492B6BFB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet2/Subnet
  MyVpcPublicSubnet2RouteTable1DF17386:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet2/RouteTable
  MyVpcPublicSubnet2RouteTableAssociation227DE78D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable1DF17386
      SubnetId:
        Ref: MyVpcPublicSubnet2Subnet492B6BFB
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet2/RouteTableAssociation
  MyVpcPublicSubnet2DefaultRoute052936F6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable1DF17386
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet2/DefaultRoute
  MyVpcPublicSubnet2EIP8CCBA239:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet2/EIP
  MyVpcPublicSubnet2NATGateway91BFBEC9:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet2EIP8CCBA239
          - AllocationId
      SubnetId:
        Ref: MyVpcPublicSubnet2Subnet492B6BFB
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PublicSubnet2/NATGateway
  MyVpcPrivateSubnet1Subnet5057CF7E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet1/Subnet
  MyVpcPrivateSubnet1RouteTable8819E6E2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet1/RouteTable
  MyVpcPrivateSubnet1RouteTableAssociation56D38C7E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
      SubnetId:
        Ref: MyVpcPrivateSubnet1Subnet5057CF7E
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet1/RouteTableAssociation
  MyVpcPrivateSubnet1DefaultRouteA8CDE2FA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet1NATGatewayAD3400C1
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet1/DefaultRoute
  MyVpcPrivateSubnet2Subnet0040C983:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet2/Subnet
  MyVpcPrivateSubnet2RouteTableCEDCEECE:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet2/RouteTable
  MyVpcPrivateSubnet2RouteTableAssociation86A610DA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableCEDCEECE
      SubnetId:
        Ref: MyVpcPrivateSubnet2Subnet0040C983
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet2/RouteTableAssociation
  MyVpcPrivateSubnet2DefaultRoute9CE96294:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableCEDCEECE
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet2NATGateway91BFBEC9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/PrivateSubnet2/DefaultRoute
  MyVpcIGW5C4A4F63:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: api-gw-to-ecs-s3/MyVpc
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/IGW
  MyVpcVPCGW488ACE0D:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      InternetGatewayId:
        Ref: MyVpcIGW5C4A4F63
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/MyVpc/VPCGW
  ecsapigwtestclusterF1CB7AE5:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ecs-apigw-test-cluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test-cluster/Resource
  ecsapigwtestLB4E644359:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internal
      SecurityGroups:
        - Fn::GetAtt:
            - ecsapigwtestLBSecurityGroupEEC58635
            - GroupId
      Subnets:
        - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
        - Ref: MyVpcPrivateSubnet2Subnet0040C983
      Type: application
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/LB/Resource
  ecsapigwtestLBSecurityGroupEEC58635:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB apigwtoecss3ecsapigwtestLB66202142
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/LB/SecurityGroup/Resource
  ecsapigwtestLBSecurityGrouptoapigwtoecss3ecsapigwtestServiceSecurityGroup3158C7C9801D4F7240:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ecsapigwtestLBSecurityGroupEEC58635
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - ecsapigwtestServiceSecurityGroup7C2AAD9F
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/LB/SecurityGroup/to apigwtoecss3ecsapigwtestServiceSecurityGroup3158C7C9:80
  ecsapigwtestLBPublicListener46C5E0CB:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ecsapigwtestLBPublicListenerECSGroupCACF40DF
          Type: forward
      LoadBalancerArn:
        Ref: ecsapigwtestLB4E644359
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/LB/PublicListener/Resource
  ecsapigwtestLBPublicListenerECSGroupCACF40DF:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/LB/PublicListener/ECSGroup/Resource
  ecsapigwtestTaskDefTaskRole62CEDE0D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/TaskDef/TaskRole/Resource
  ecsapigwtestTaskDef2F15220F:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: amazon/amazon-ecs-sample
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: ecsapigwtestTaskDefwebLogGroupD2F45FAC
              awslogs-stream-prefix: ecs-apigw-test
              awslogs-region: us-east-2
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - ecsapigwtestTaskDefExecutionRoleF1BDE394
          - Arn
      Family: apigwtoecss3ecsapigwtestTaskDefD02BCEA1
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - ecsapigwtestTaskDefTaskRole62CEDE0D
          - Arn
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/TaskDef/Resource
  ecsapigwtestTaskDefwebLogGroupD2F45FAC:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/TaskDef/web/LogGroup/Resource
  ecsapigwtestTaskDefExecutionRoleF1BDE394:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/TaskDef/ExecutionRole/Resource
  ecsapigwtestTaskDefExecutionRoleDefaultPolicyBB9CF4A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ecsapigwtestTaskDefwebLogGroupD2F45FAC
                - Arn
        Version: "2012-10-17"
      PolicyName: ecsapigwtestTaskDefExecutionRoleDefaultPolicyBB9CF4A7
      Roles:
        - Ref: ecsapigwtestTaskDefExecutionRoleF1BDE394
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/TaskDef/ExecutionRole/DefaultPolicy/Resource
  ecsapigwtestService89701835:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ecsapigwtestclusterF1CB7AE5
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: ecsapigwtestLBPublicListenerECSGroupCACF40DF
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - ecsapigwtestServiceSecurityGroup7C2AAD9F
                - GroupId
          Subnets:
            - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
            - Ref: MyVpcPrivateSubnet2Subnet0040C983
      TaskDefinition:
        Ref: ecsapigwtestTaskDef2F15220F
    DependsOn:
      - ecsapigwtestLBPublicListenerECSGroupCACF40DF
      - ecsapigwtestLBPublicListener46C5E0CB
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/Service/Service
  ecsapigwtestServiceSecurityGroup7C2AAD9F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: api-gw-to-ecs-s3/ecs-apigw-test/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/Service/SecurityGroup/Resource
  ecsapigwtestServiceSecurityGroupfromapigwtoecss3ecsapigwtestLBSecurityGroupBE8D5A4D80101031A7:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - ecsapigwtestServiceSecurityGroup7C2AAD9F
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ecsapigwtestLBSecurityGroupEEC58635
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-apigw-test/Service/SecurityGroup/from apigwtoecss3ecsapigwtestLBSecurityGroupBE8D5A4D:80
  ecss3testapi5A64DEE9:
    Type: AWS::ApiGateway::RestApi
    Properties:
      BinaryMediaTypes:
        - image/png
      Description: Test API for distributing traffic to S3 and ECS
      Name: ECS S3 Test API
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Resource
  ecss3testapiCloudWatchRole8EBDA8C2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/CloudWatchRole/Resource
  ecss3testapiAccountCBF6B6E3:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - ecss3testapiCloudWatchRole8EBDA8C2
          - Arn
    DependsOn:
      - ecss3testapi5A64DEE9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Account
  ecss3testapiDeployment921BCACA1eabfa91c9936711ddb100a00b77d071:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ecss3testapi5A64DEE9
      Description: Automatically created by the RestApi construct
    DependsOn:
      - ecss3testapifolderitemGET992FD991
      - ecss3testapifolderitemB25788FA
      - ecss3testapifolder68A89F9A
      - ecss3testapiapisproxyGET92908D41
      - ecss3testapiapisproxy795042B1
      - ecss3testapiapis1AF60FA7
      - ecss3testapiGETB67F550D
      - ecss3testapiimagesimageGETAC1EC940
      - ecss3testapiimagesimage038AFA2E
      - ecss3testapiimages05224226
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Deployment/Resource
  ecss3testapiDeploymentStageprod7996739E:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: ecss3testapi5A64DEE9
      DeploymentId:
        Ref: ecss3testapiDeployment921BCACA1eabfa91c9936711ddb100a00b77d071
      StageName: prod
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/DeploymentStage.prod/Resource
  ecss3testapiGETB67F550D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Fn::GetAtt:
          - ecss3testapi5A64DEE9
          - RootResourceId
      RestApiId:
        Ref: ecss3testapi5A64DEE9
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - RestAPIRoleA3B4EFA3
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'text/html'"
            ResponseTemplates:
              text/html: $input.path('$')
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        RequestTemplates:
          application/json: Action=SendMessage&MessageBody=$input.body
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:us-east-2:"
              - Ref: AWS::AccountId
              - -s3-ecs-apigw-test.s3:path/index.html
      MethodResponses:
        - ResponseParameters:
            method.response.header.Content-Type: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/GET/Resource
  ecss3testapiapis1AF60FA7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ecss3testapi5A64DEE9
          - RootResourceId
      PathPart: apis
      RestApiId:
        Ref: ecss3testapi5A64DEE9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/apis/Resource
  ecss3testapiapisproxy795042B1:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ecss3testapiapis1AF60FA7
      PathPart: "{proxy+}"
      RestApiId:
        Ref: ecss3testapi5A64DEE9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/apis/{proxy+}/Resource
  ecss3testapiapisproxyGET92908D41:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ecss3testapiapisproxy795042B1
      RestApiId:
        Ref: ecss3testapi5A64DEE9
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - RestAPIRoleA3B4EFA3
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'text/html'"
            ResponseTemplates:
              text/html: $input.path('$')
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        RequestTemplates:
          application/json: Action=SendMessage&MessageBody=$input.body
        Type: HTTP_PROXY
        Uri:
          Fn::Join:
            - ""
            - - http://
              - Fn::GetAtt:
                  - ecsapigwtestLB4E644359
                  - DNSName
      MethodResponses:
        - ResponseParameters:
            method.response.header.Content-Type: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/apis/{proxy+}/GET/Resource
  ecss3testapiimages05224226:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ecss3testapi5A64DEE9
          - RootResourceId
      PathPart: images
      RestApiId:
        Ref: ecss3testapi5A64DEE9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/images/Resource
  ecss3testapiimagesimage038AFA2E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ecss3testapiimages05224226
      PathPart: "{image}"
      RestApiId:
        Ref: ecss3testapi5A64DEE9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/images/{image}/Resource
  ecss3testapiimagesimageGETAC1EC940:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ecss3testapiimagesimage038AFA2E
      RestApiId:
        Ref: ecss3testapi5A64DEE9
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - RestAPIRoleA3B4EFA3
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ContentHandling: CONVERT_TO_BINARY
            ResponseParameters:
              method.response.header.Content-Type: "'image/png'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
          integration.request.path.image: method.request.path.image
        RequestTemplates:
          application/json: Action=SendMessage&MessageBody=$input.body
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:us-east-2:"
              - Ref: AWS::AccountId
              - -s3-ecs-apigw-test.s3:path/images/{image}
      MethodResponses:
        - ResponseParameters:
            method.response.header.Content-Type: true
          StatusCode: "200"
      RequestParameters:
        method.request.path.image: true
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/images/{image}/GET/Resource
  ecss3testapifolder68A89F9A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ecss3testapi5A64DEE9
          - RootResourceId
      PathPart: "{folder}"
      RestApiId:
        Ref: ecss3testapi5A64DEE9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/{folder}/Resource
  ecss3testapifolderitemB25788FA:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ecss3testapifolder68A89F9A
      PathPart: "{item}"
      RestApiId:
        Ref: ecss3testapi5A64DEE9
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/{folder}/{item}/Resource
  ecss3testapifolderitemGET992FD991:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ecss3testapifolderitemB25788FA
      RestApiId:
        Ref: ecss3testapi5A64DEE9
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - RestAPIRoleA3B4EFA3
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'text/html'"
            ResponseTemplates:
              text/html: $input.path('$')
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
          integration.request.path.item: method.request.path.item
          integration.request.path.folder: method.request.path.folder
        RequestTemplates:
          application/json: Action=SendMessage&MessageBody=$input.body
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:us-east-2:"
              - Ref: AWS::AccountId
              - -s3-ecs-apigw-test.s3:path/{folder}/{item}
      MethodResponses:
        - ResponseParameters:
            method.response.header.Content-Type: true
          StatusCode: "200"
      RequestParameters:
        method.request.path.item: true
        method.request.path.folder: true
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/ecs-s3-test-api/Default/{folder}/{item}/GET/Resource
  RestAPIRoleA3B4EFA3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3ReadOnlyAccess
    Metadata:
      aws:cdk:path: api-gw-to-ecs-s3/RestAPIRole/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.63.0,@aws-cdk/assets=1.64.1,@aws-cdk/aws-apigateway=1.64.1,@aws-cdk/aws-applicationautoscaling=1.64.1,@aws-cdk/aws-autoscaling=1.64.1,@aws-cdk/aws-autoscaling-common=1.64.1,@aws-cdk/aws-autoscaling-hooktargets=1.64.1,@aws-cdk/aws-batch=1.64.1,@aws-cdk/aws-certificatemanager=1.64.1,@aws-cdk/aws-cloudformation=1.64.1,@aws-cdk/aws-cloudfront=1.64.1,@aws-cdk/aws-cloudwatch=1.64.1,@aws-cdk/aws-codebuild=1.64.1,@aws-cdk/aws-codecommit=1.64.1,@aws-cdk/aws-codeguruprofiler=1.64.1,@aws-cdk/aws-codepipeline=1.64.1,@aws-cdk/aws-cognito=1.64.1,@aws-cdk/aws-ec2=1.64.1,@aws-cdk/aws-ecr=1.64.1,@aws-cdk/aws-ecr-assets=1.64.1,@aws-cdk/aws-ecs=1.64.1,@aws-cdk/aws-ecs-patterns=1.64.1,@aws-cdk/aws-efs=1.64.1,@aws-cdk/aws-elasticloadbalancing=1.64.1,@aws-cdk/aws-elasticloadbalancingv2=1.64.1,@aws-cdk/aws-events=1.64.1,@aws-cdk/aws-events-targets=1.64.1,@aws-cdk/aws-iam=1.64.1,@aws-cdk/aws-kinesis=1.64.1,@aws-cdk/aws-kms=1.64.1,@aws-cdk/aws-lambda=1.64.1,@aws-cdk/aws-logs=1.64.1,@aws-cdk/aws-route53=1.64.1,@aws-cdk/aws-route53-targets=1.64.1,@aws-cdk/aws-s3=1.64.1,@aws-cdk/aws-s3-assets=1.64.1,@aws-cdk/aws-sam=1.64.1,@aws-cdk/aws-secretsmanager=1.64.1,@aws-cdk/aws-servicediscovery=1.64.1,@aws-cdk/aws-sns=1.64.1,@aws-cdk/aws-sns-subscriptions=1.64.1,@aws-cdk/aws-sqs=1.64.1,@aws-cdk/aws-ssm=1.64.1,@aws-cdk/aws-stepfunctions=1.64.1,@aws-cdk/cloud-assembly-schema=1.64.1,@aws-cdk/core=1.64.1,@aws-cdk/custom-resources=1.64.1,@aws-cdk/cx-api=1.64.1,@aws-cdk/region-info=1.64.1,jsii-runtime=Python/3.7.3
Outputs:
  ecsapigwtestLoadBalancerDNS4CF0D78E:
    Value:
      Fn::GetAtt:
        - ecsapigwtestLB4E644359
        - DNSName
  ecsapigwtestServiceURL352AF886:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - ecsapigwtestLB4E644359
              - DNSName
  ecss3testapiEndpointD01435AC:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ecss3testapi5A64DEE9
          - .execute-api.us-east-2.
          - Ref: AWS::URLSuffix
          - /
          - Ref: ecss3testapiDeploymentStageprod7996739E
          - /

